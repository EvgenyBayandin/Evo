package Task_3_4;
import java.util.Scanner;

public class User {

    /*
    * üí°üí°- –°–æ–∑–¥–∞—Ç—å –∫–ª–∞—Å—Å "User", —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –¥–≤–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö:
    * private String name;
    * private Integer age;
    *
    * üí°- –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–ª–∞—Å—Å –≥–µ—Ç—Ç–µ—Ä—ã –∏ —Å–µ—Ç—Ç–µ—Ä—ã, –ø—Ä–∏—Å–≤–∞–∏–≤–∞—é—â–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —ç—Ç–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    * üí°- –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–ª–∞—Å—Å –º–µ—Ç–æ–¥: public String toString(), –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –≤–∏–¥–∞: "–í–∞—Å—è, –≤–æ–∑—Ä–∞—Å—Ç 25 –ª–µ—Ç", –≥–¥–µ
    * "–í–∞—Å—è" - –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π name, –∞ 25 - –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π age.
    *
    * üí°- –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞, –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –Ω–∞ –≤—Ö–æ–¥ –¥–≤–∞ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π –∏–º–∏ —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ –º–µ—Ç–æ–¥–µ main –≥–ª–∞–≤–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞:
    * üí°- –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫—É —Å –∏–º–µ–Ω–µ–º, –∑–∞—Ç–µ–º —á–∏—Å–ª–æ –≤–æ–∑—Ä–∞—Å—Ç–∞, —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏—Ö –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    * üí°- –°–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ User, –ø–µ—Ä–µ–¥–∞–≤ –≤ –µ–≥–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —ç—Ç–∏ –¥–≤–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∑–Ω–∞—á–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω –º–æ–∂–µ—Ç –ø—Ä–∏–Ω—è—Ç—å
    * üí°- –ï—â–µ —Ä–∞–∑ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —É –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –∏–º—è –∏ –≤–æ–∑—Ä–∞—Å—Ç –¥—Ä—É–≥–æ–≥–æ —é–∑–µ—Ä–∞
    * üí°- –°–æ–∑–¥–∞—Ç—å –≤—Ç–æ—Ä–æ–π –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å User, –ø–µ—Ä–µ–¥–∞–≤ –≤ –µ–≥–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —ç—Ç–∏ –¥–≤–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∑–Ω–∞—á–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω –º–æ–∂–µ—Ç –ø—Ä–∏–Ω—è—Ç—å
    * üí°- –í—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –∑–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç toString() —É –æ–±—ä–µ–∫—Ç–∞ —Å –Ω–∞–∏–º–µ–Ω—å—à–∏–º age
    */

    private String name;
    private Integer age;

    public User(String name, Integer age) {
        this.name = name;
        this.age = age;
    }

    public User() {
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Integer getAge() {
        return age;
    }

    public void setAge(Integer age) {
        this.age = age;
    }



    public static void main(String[] args) {

        Scanner in = new Scanner(System.in);

        User userOne = new User();
        User userTwo = new User();

        boolean isValidName = false;
        boolean isValidData = false;

        while (!isValidName) {
            try {
                System.out.print("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ");
                String name = in.nextLine().trim();
                    if (name != null && name.isEmpty()) {
                        System.out.println("–ò–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º");
                        continue;
                    }
//                    if (!isValidName(name)) {
//                        System.out.println("–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã");
//                        continue;
//                    }
                        userOne.setName(name);
                        isValidName = true;
            } catch (Exception e) {
                System.out.println("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö!");
            }
        }


        while (!isValidData) {
            try {
                System.out.print("–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ");
                int age = Integer.parseInt(in.nextLine().trim());
                if(age <= 0 || age > 100) {
                    System.out.println("–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç");
                    continue;
                }
                userOne.setAge(age);
                isValidData = true;
            } catch (Exception exception){
                System.out.println("–£–∫–∞–∂–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç –≤ –≥–æ–¥–∞—Ö, –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞");
            }
        }

        isValidName = false;
        while (!isValidName) {
            try {
                System.out.print("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ");
                String name = in.nextLine().trim();
                if (name != null && name.isEmpty()) {
                    System.out.println("–ò–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º");
                    continue;
                }
//                if (!isValidName(name)) {
//                    System.out.println("–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã");
//                    continue;
//                }
                userTwo.setName(name);
                isValidName = true;
            } catch (Exception e) {
                System.out.println("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö!");
            }
        }

        isValidData = false;
        while (!isValidData) {
            try {
                System.out.print("–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ");
                int age = Integer.parseInt(in.nextLine().trim());
                if(age <= 0 || age > 100) {
                    throw new Exception("–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç");
                }
                userTwo.setAge(age);
                isValidData = true;
            } catch (Exception exception){
                System.out.println("–£–∫–∞–∂–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç –≤ –≥–æ–¥–∞—Ö, –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞");
            }
        }
        in.close();

        if(userTwo.getAge() > userOne.getAge()){
            System.out.println(userOne.toString());
        } else {
            System.out.println(userTwo.toString());
        }

    }


//    private static boolean isValidName(String name) {
//        return !name.isEmpty() && name.matches("^[a-zA-Z–∞-—è–ê-–Ø ]+$");
//    }

    public String toString(){
        return name + ", –≤–æ–∑—Ä–∞—Å—Ç " + age + " –ª–µ—Ç";
    }
}
